# This is a basic workflow to help you get started with Actions

name: Deploy to Azure

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  
  unit-test:
    runs-on: ubuntu-latest
  
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test with pytest
      run: |
        pip install pytest
        pip install pytest-cov
        pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results
        path: junit/test-results.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    - name: Upload code coverage (xml)
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage
        path: coverage.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    - name: Upload code coverage (html)
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-html
        path: htmlcov
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
  
  
  deploy-to-azure:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [unit-test]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Setup Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
          
      - name: 'Run pip'
        shell: bash
        run: |
          # If your function app project is not located in your repository's root
          # Please change your directory for pip in pushd
          pushd .
          python -m pip install --upgrade pip
          pip install -r requirements.txt --target=".python_packages/lib/site-packages"
          popd

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: serviceavailabilityapp

      - name: "Publish Build Artifact"
        uses: actions/upload-artifact@v2.1.4
        with:
          # Artifact name
          name: serviceavailabilityapp-pkg # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: /home/runner/work/_temp/*.zip 
          # The desired behavior if no files are found using the provided path.        
          if-no-files-found: warn # optional, default is warn
